walmart_mean <- mean(walmart_data*100$Close)
#mean and standard deviation of closing prices
walmart_mean <- mean(walmart_data$Close*100)
walmart_mean
walmart_sd <- sd(walmart_data$Close*100)
walmart_sd
setwd("~/Dropbox/isb/Preterm/Assignment")
#Pre-requisites to run this R script is to successfully install all below packages
install.packages("readxl")
install.package("dplyr")
install.packages("ggplot2")
install.packages("lubridate")
install.packages('gridExtra')
install.packages("data.table")
#import required libraries
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(gridExtra)
library(data.table)
#read data from excel
data <- read_excel("Prob_Assignment_Dataset.xlsx")
class(data)
#Look at structure of all columns
str(data)
#View first 5 rows
head(data)
#Identify class of each of the columns. Looks like dates and numeric values are parsed correctly by R
sapply(data, class)
#Identify quartiles, mean, median etc for each column
summary(data)
#We have six sites, and most visitors are for Acme, Pinnacle and Sortly
qplot(x=site,data=data)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#Group visitors of website by platform
#Interesting insight on - Botly is a android platform only
#Where as Widgetry and Tabular is on iOS and iPad
#And Widgetry is from iOS and iPhone
qplot(x=platform,data=data) + facet_wrap(~site,ncol=2)
#Get Month, Day of Week from date
data$month = month(as.POSIXlt(data$day, format="%d/%m/%y"))
data$dayofweek = weekdays(as.POSIXlt(data$day, format="%d/%m/%y"))
data$dayofyear = day(as.POSIXlt(data$day, format="%d/%m/%y"))
help(POSIXlt)
#Lets Try to figure out any special pattern by month
qplot(x=month ,data=data) +
facet_wrap(~site,ncol=2) +
scale_x_continuous(limits=c(0,13),breaks=seq(1,12))
#Create a histogram of friend count
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
#log(gross_sales has some kind of normal distribution)
a <- qplot(x=gross_sales,data=data)
b <- qplot(x=log(gross_sales),data=data)
c<-qplot(x=sqrt(gross_sales),data=data)
grid.arrange(a,b,c,ncol=1)
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
a <- qplot(x=orders,data=data)
b <- qplot(x=log(orders),data=data)
c<-qplot(x=sqrt(orders),data=data)
grid.arrange(a,b,c,ncol=1)
a <- qplot(x=distinct_sessions, data=data)
b <- qplot(x=log(distinct_sessions), data=data)
c <- qplot(x=sqrt(distinct_sessions), data=data)
grid.arrange(a,b,c,ncol=1)
#Identify number of new customers in a year
count(data, c(new_customer))
#Lets concentrate on which platform
by(data$orders, data$dayofweek, summary)
summary(data$orders>0)
nrow(data)
class(data)
#Identify class of each of the columns. Looks like dates and numeric values are parsed correctly by R
sapply(data, class)
#Identify quartiles, mean, median etc for each column
summary(data)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#We have six sites, and most visitors are for Acme, Pinnacle and Sortly
qplot(x=site,data=data)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#Group visitors of website by platform
#Interesting insight on - Botly is a android platform only
#Where as Widgetry and Tabular is on iOS and iPad
#And Widgetry is from iOS and iPhone
qplot(x=platform,data=data) + facet_wrap(~site,ncol=2)
View(data)
#Lets Try to figure out any special pattern by month
qplot(x=month ,data=data) +
facet_wrap(~site,ncol=2) +
scale_x_continuous(limits=c(0,13),breaks=seq(1,12))
#Create a histogram of friend count
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
grid.arrange(a,b,c,ncol=1)
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
a <- qplot(x=orders,data=data)
b <- qplot(x=log(orders),data=data)
c<-qplot(x=sqrt(orders),data=data)
grid.arrange(a,b,c,ncol=1)
a <- qplot(x=distinct_sessions, data=data)
b <- qplot(x=log(distinct_sessions), data=data)
c <- qplot(x=sqrt(distinct_sessions), data=data)
grid.arrange(a,b,c,ncol=1)
#Identify number of new customers in a year
count(data, c(new_customer))
#Lets concentrate on which platform
by(data$orders, data$dayofweek, summary)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#Group visitors of website by platform
#Interesting insight on - Botly is a android platform only
#Where as Widgetry and Tabular is on iOS and iPad
#And Widgetry is from iOS and iPhone
qplot(x=platform,data=data) + facet_wrap(~site,ncol=2)
#Create a histogram of friend count
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
a <- qplot(x=orders,data=data)
b <- qplot(x=log(orders),data=data)
c<-qplot(x=sqrt(orders),data=data)
grid.arrange(a,b,c,ncol=1)
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
#Large number of sales were of small value
qplot(x=orders, data=subset(data,!is.na(orders)), xlim=c(1,100), binwidth=10)
#Identify number of new customers in a year
count(data, c(new_customer))
c<-qplot(x=sqrt(gross_sales),data=data)
grid.arrange(a,b,c,ncol=1)
#Create a histogram of friend count
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
#Lets Try to figure out any special pattern by month
qplot(x=month ,data=data) +
facet_wrap(~site,ncol=2) +
scale_x_continuous(limits=c(0,13),breaks=seq(1,12))
b <- qplot(x=log(gross_sales),data=data)
c<-qplot(x=sqrt(gross_sales),data=data)
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
#Identify number of new customers in a year
count(data, c(new_customer))
summary(data$orders>0)
#We have six sites, and most visitors are for Acme, Pinnacle and Sortly
qplot(x=site,data=data)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#Group visitors of website by platform
#Interesting insight on - Botly is a android platform only
#Where as Widgetry and Tabular is on iOS and iPad
#And Widgetry is from iOS and iPhone
qplot(x=platform,data=data) + facet_wrap(~site,ncol=2)
#Identify number of new customers in a year
count(data, c(new_customer))
#Count of rows having no of orders greater than zero
summary(data$orders>0)
```{r}
setwd("~/Dropbox/isb/Preterm/Assignment/11_Univariate_Analysis")
data <- read_excel("Prob_Assignment_Dataset.xlsx")
#read data from excel
data <- read_excel("Prob_Assignment_Dataset.xlsx")
#Pre-requisites to run this R script is to successfully install all below packages
install.packages("readxl")
install.package("dplyr")
install.packages("ggplot2")
install.packages("lubridate")
install.packages('gridExtra')
install.packages("data.table")
#import required libraries
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(gridExtra)
library(data.table)
#read data from excel
data <- read_excel("Prob_Assignment_Dataset.xlsx")
#read_excel gives a data.table
class(data)
#Look at structure of all columns
str(data)
#View first 5 rows
head(data)
#Identify class of each of the columns. Looks like dates and numeric values are parsed correctly by R
sapply(data, class)
#Identify quartiles, mean, median etc for each column
summary(data)
#We have six sites, and most visitors are for Acme, Pinnacle and Sortly
qplot(x=site,data=data)
#Lets check which platform vistors are coming from
#Large number of customers come from Android devies and iPhone
qplot(x=platform, data=data)
#Group visitors of website by platform
#Interesting insight on - Botly is a android platform only
#Where as Widgetry and Tabular is on iOS and iPad
#And Widgetry is from iOS and iPhone
qplot(x=platform,data=data) + facet_wrap(~site,ncol=2)
#Get Month, Day of Week from date
data$month = month(as.POSIXlt(data$day, format="%d/%m/%y"))
data$dayofweek = weekdays(as.POSIXlt(data$day, format="%d/%m/%y"))
data$dayofyear = day(as.POSIXlt(data$day, format="%d/%m/%y"))
help(POSIXlt)
#Lets Try to figure out any special pattern by month
qplot(x=month ,data=data) +
facet_wrap(~site,ncol=2) +
scale_x_continuous(limits=c(0,13),breaks=seq(1,12))
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
#log(gross_sales has some kind of normal distribution)
a <- qplot(x=gross_sales,data=data)
b <- qplot(x=log(gross_sales),data=data)
c<-qplot(x=sqrt(gross_sales),data=data)
grid.arrange(a,b,c,ncol=1)
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
#Large number of sales were of small value
qplot(x=orders, data=subset(data,!is.na(orders)), xlim=c(1,100), binwidth=10)
a <- qplot(x=distinct_sessions, data=data)
b <- qplot(x=log(distinct_sessions), data=data)
c <- qplot(x=sqrt(distinct_sessions), data=data)
grid.arrange(a,b,c,ncol=1)
#Identify number of new customers in a year
count(data, c(new_customer))
#Lets concentrate on which platform
by(data$orders, data$dayofweek, summary)
#Count of rows having no of orders greater than zero
summary(data$orders>0)
nrow(data)
#We have six sites, and most visitors are for Acme, Pinnacle and Sortly
qplot(x=site,data=data)
#Lets Try to figure out any special pattern by month
qplot(x=month ,data=data) +
facet_wrap(~site,ncol=2) +
scale_x_continuous(limits=c(0,13),breaks=seq(1,12))
#However, same kind of pattern couldn't be seen in orders or distinct_sessions or visits
#Large number of sales were of small value
qplot(x=orders, data=subset(data,!is.na(orders)), xlim=c(1,100), binwidth=10)
c<-qplot(x=sqrt(gross_sales),data=data)
grid.arrange(a,b,c,ncol=1)
#log(gross_sales has some kind of normal distribution)
a <- qplot(x=gross_sales,data=data)
b <- qplot(x=log(gross_sales),data=data)
c<-qplot(x=sqrt(gross_sales),data=data)
grid.arrange(a,b,c,ncol=1)
#Large number of sales were of small value
qplot(x=gross_sales, data=subset(data,!is.na(gross_sales)), xlim=c(1,5000), binwidth=100)
setwd("~/")
#Pre-requisite - Run 11_Univariate_Analysis.R first to install and import all required packages in session
library(ggplot2)
library(lubridate)
#read data from excel
data <- read_excel("Prob_Assignment_Dataset.xlsx")
head(data)
#get month, day, and dayofweek from date
data$month <- month(as.POSIXlt(data$day))
data$dayofyear <- day(as.POSIXlt(data$day))
data$dayofweek <- weekdays(as.POSIXlt(data$day))
#Plot no of orders with no of visits and session
#As no of visits increases per day, no of orders keeps on increasing most of the time
a <- qplot(x=distinct_sessions, y=orders, data=data, xlim=c(1,5000), ylim=c(1,1000))
b <- qplot(x=visits, y=orders, data=data, xlim=c(1,5000), ylim=c(1,1000))
grid.arrange(a,b,ncol=1)
#Gross value of orders coming on Sunday is higher than other days
#Also, median value of orders coming on Sunday is higher
summary(data$gross_sales)
qplot(x=dayofweek, y=gross_sales, data=subset(data,!is.na(gross_sales)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,5000))
#Look at various quartiles of orders
orders_dataset <- subset(data, data$orders>0)
quantile(orders_dataset$orders,c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 1))
#Since most of the sessions generated upto 450 orders, max. Lets see which days of week generated most number of orders
qplot(x=dayofweek, y=orders, data=subset(data,!is.na(orders)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,450))
#Above graph doesn't gives a clear idea
sales_by_day_of_week <- group_by(data,dayofweek)
head(sales_by_day_of_week)
typeof(data$gross_sales)
sales_by_day <- aggregate(data$gross_sales, by=(list(data$dayofyear, data$month)), FUN=sum)
#Lets try to figure out which website generates big orders
#We can clearly see tabular and widgetry generated big orders
summary(data$gross_sales)
qplot(x=site, y=gross_sales, data=subset(data,!is.na(site)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,50000))
#get total sales site
#Tabular and Widgetry generates lot of big orders, but looks like Acme is much more popular
#Total gross revenue generated is much higher by Acme
aggregate(data$gross_sales, by=list(Site=data$site), FUN=sum, na.rm=TRUE, na.action=NULL)
#No clear cut winner by dayofweek
aggregate(data$gross_sales, by=list(Site=data$dayofweek), FUN=sum, na.rm=TRUE, na.action=NULL)
#Looks like lot of sales come in month of December
aggregate(data$gross_sales, by=list(Site=data$month), FUN=sum, na.rm=TRUE, na.action=NULL)
#Earier we saw no. of visits against order
cor.test(data$visits, data$orders, method='pearson')
cor.test(data$visits, data$gross_sales, method='pearson')
#Pre-requisite - Run 11_Univariate_Analysis.R first to install and import all required packages in session
library(ggplot2)
library(lubridate)
#read data from excel
data <- read_excel("Prob_Assignment_Dataset.xlsx")
head(data)
#get month, day, and dayofweek from date
data$month <- month(as.POSIXlt(data$day))
data$dayofyear <- day(as.POSIXlt(data$day))
data$dayofweek <- weekdays(as.POSIXlt(data$day))
#Plot no of orders with no of visits and session
#As no of visits increases per day, no of orders keeps on increasing most of the time
a <- qplot(x=distinct_sessions, y=orders, data=data, xlim=c(1,5000), ylim=c(1,1000))
b <- qplot(x=visits, y=orders, data=data, xlim=c(1,5000), ylim=c(1,1000))
grid.arrange(a,b,ncol=1)
#Gross value of orders coming on Sunday is higher than other days
#Also, median value of orders coming on Sunday is higher
summary(data$gross_sales)
qplot(x=dayofweek, y=gross_sales, data=subset(data,!is.na(gross_sales)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,5000))
#Gross value of orders coming on Sunday is higher than other days
#Also, median value of orders coming on Sunday is higher
data1 = data$dayofweek=="Sunday"
summary(data1$gross_sales)
#Gross value of orders coming on Sunday is higher than other days
#Also, median value of orders coming on Sunday is higher
data1 = subset(data, dayofweek=="Sunday")
summary(data1$gross_sales)
summary(data$gross_sales)
qplot(x=dayofweek, y=gross_sales, data=subset(data,!is.na(gross_sales)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,5000))
#Look at various quartiles of orders
orders_dataset <- subset(data, data$orders>0)
quantile(orders_dataset$orders,c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 1))
#Since most of the sessions generated upto 450 orders, max. Lets see which days of week generated most number of orders
qplot(x=dayofweek, y=orders, data=subset(data,!is.na(orders)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,450))
head(sales_by_day_of_week)
#Above graph doesn't gives a clear idea
sales_by_day_of_week <- group_by(data,dayofweek)
head(sales_by_day_of_week)
typeof(data$gross_sales)
sales_by_day <- aggregate(data$gross_sales, by=(list(data$dayofyear, data$month)), FUN=sum)
#Lets try to figure out which website generates big orders
#We can clearly see tabular and widgetry generated big orders
summary(data$gross_sales)
qplot(x=site, y=gross_sales, data=subset(data,!is.na(site)) ,geom='boxplot') +
coord_cartesian(ylim=c(0,50000))
#get total sales site
#Tabular and Widgetry generates lot of big orders, but looks like Acme is much more popular
#Total gross revenue generated is much higher by Acme
aggregate(data$gross_sales, by=list(Site=data$site), FUN=sum, na.rm=TRUE, na.action=NULL)
#No clear cut winner by dayofweek
aggregate(data$gross_sales, by=list(Site=data$dayofweek), FUN=sum, na.rm=TRUE, na.action=NULL)
#Looks like lot of sales come in month of December
aggregate(data$gross_sales, by=list(Site=data$month), FUN=sum, na.rm=TRUE, na.action=NULL)
#Earier we saw no. of visits against order
cor.test(data$visits, data$orders, method='pearson')
cor.test(data$visits, data$gross_sales, method='pearson')
install.packages("XML")
install.packages("rvest")
install.packages("XML")
pnorn(.636)
pnorm(.636)
pnorm(.8939)
pnorm(1.5454)
pnorm(1.5454) - pnorm(.8939)
unlink('Downloads/Untitled_cache', recursive = TRUE)
data <- read.csv("..\Datasets\mba.csv")
data <- read.csv("../Datasets/mba.csv")
summary(data)
density(data$gmat)
hist(data$gmat)
#hist(data$gmat)
plot(d)
d <- density(data$gmat)
plot(d)
#hist(data$gmat)
boxplot(data$gmat)
qnorm(seq(0.01,0.99,0.01))
plot(qnorm(seq(0.01,0.99,0.01)))
qnorm(.005)
qnorm(.005)*0.2
16 - qnorm(.005)*0.2
mean(x)
x <- (87.50,123.10, 45.30, 52.22, 213.00, 155.00, 39.00, 76.05, 49.80, 99.99, 132.00, 102.11)
x <- c(87.50,123.10,45.30,52.22, 213.00, 155.00, 39.00, 76.05, 49.80, 99.99, 132.00, 102.11)
x <- c(87.50,123.10,45.30,52.22, 213.00, 155.00, 39.00, 76.05, 49.80, 99.99, 132.00, 102.11)
mean(x)
variance(x)
x <- c(87.50,123.10,45.30,52.22, 213.00, 155.00, 39.00, 76.05, 49.80, 99.99, 132.00, 102.11)
mean(x)
variance(x)
standardDeviation(x)
sd(x)
pnorm(-2)
pnorm(0.5)
pnorm(1)
pnorm(1)
pnorm(1.96)
qnorm(1.96)
qnorm(-2)
qnorm(-2)
qnorm(2)
pnorm(2)
```{r}
(1.01-1.008)/(.045/sqrt(50))
pnorm((1.01-1.008)/(.045/sqrt(50))) - pnorm((.99-1.008)/(.045/sqrt(50)))
pnorm(0.95)
pnorm(0.45)
pnorm(0.45)
pnorm(0.95)
qnorm(0.5+0.95/2)
qnorm(0.5-0.95/2)
qnorm(0.5+0.99/2)
qnorm(0.5+0.90/2)
0.5/2
(1-0.95)/2
pnorm(0.025)
pnorm(0.9)
qnorm(0.9)
qnorm(0.1)
x <- c(0.49, 0.59, 0.86, 1.01, 1.24, 1.25, 1.81, 2.01, 2.29, 2.66, 2.82, 2.85, 3, 3.27, 4.44, 5.14, 5.53, 5.6, 6.06, 6.29)
mean(x)
install.packages("moments")
knitr::opts_chunk$set(echo = TRUE)
library("ggplot2")
library("moments")
sample_mean = house_prices$Prices
house_prices <- read.csv('../Datasets/houseprices.csv')
summary(house_prices)
sample_mean = house_prices$Price
#sample_mean = house_prices$Price
normtol.int(x = house_prices$Price, alpha = 0.05, P = 0.95, side = 2)
normtol.int?
normtol?
normtol?
install.packages("tolerance")
library("ggplot2")
library("moments")
library("tolerance")
knitr::opts_chunk$set(echo = TRUE)
library("ggplot2")
library("moments")
library("tolerance")
house_prices <- read.csv('../Datasets/houseprices.csv')
summary(house_prices)
qplot(house_prices$Price/1000, house_prices$Living.Area, main="Living Area vs Price",
xlab="House prices in $1000s(K) ",
ylab="Living Area (sq ft) ")
qplot(x=Price, data=house_prices/1000, bins=50, xlab="House prices in 1000(K)")
qqnorm(house_prices$Price/1000);qqline(house_prices$Price/1000)
boxplot(Price/1000 ~ Bathrooms, data = house_prices, xlab = "Number of Bathrooms",
ylab = "Price in (1000)K", main = "House Prices Vs No of Bathrooms")
boxplot(Price/1000 ~ Bedrooms, data = house_prices, xlab = "Number of Bedrooms",
ylab = "Price in (1000)K", main = "House Prices Vs No of Bedrooms")
hist(house_prices$Living.Area, xlab = "Living Area (Sq ft)", ylab = "Count of houses", main = "Histogram of house prices")
print(skewness(house_prices$Living.Area))
boxplot(house_prices$Living.Area)
house_prices$Log.Living.Area = log(house_prices$Living.Area)
hist(house_prices$Living.Area) -> p1
hist(house_prices$Log.Living.Area) -> p2
grid.arrange(p1, p2, ncol = 2)
cuberoot(1.70912)
1.70912^(1/3)
setwd("~/DropBox")
setwd("~/Dropbox/isb/Statistical Analysis/Practice Problems")
data <- readxl::read_excel("descriptive1.xlsx")
head(data)
hist(data$`Measure X`)
mean(data$`Measure X`)
sigma(data$`Measure X`)
sd(data$`Measure X`)
variance <- var(data$`Measure X`)
variance
library(rvest)
library(RSelenium)
library(stringr)
library(xm12)
library(wdman)
url <- "https://www.social-enterprise.nl/wie-doen-het/"
remDr <- remoteDriver()
# Open the browser webpage
remDr$open()
#navigate to your page
remDr$navigate(url)
# Locate the load more button
loadmorebutton <- remDr$findElement(using = 'css selector', "#morenews")
for (i in 1:2){
print(i)
loadmorebutton$clickElement()
Sys.sleep(30)
}
page_source<-remDr$getPageSource()
Merken <- read_html(page_source[[1]]) %>%
html_nodes("#membershipCntr span") %>%
html_text()
remDr$close()
library(rvest)
library(RSelenium)
install.packages("RSelenium")
library(stringr)
library(xm12)
library(wdman)
library(xml2)
library(wdman)
url <- "https://www.social-enterprise.nl/wie-doen-het/"
remDr <- remoteDriver()
# Open the browser webpage
remDr$open()

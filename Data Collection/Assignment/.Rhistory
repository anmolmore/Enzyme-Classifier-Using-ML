browser$navigate(url)
Sys.sleep(2)
all.reviews.link <- tryCatch({
browser$findElement(using = 'xpath', "//*[contains(text(), 'All Reviews')]")
}, error = function(e) {
message("No reviews available, skip !")
browser$close()
driver[["server"]]$stop()
return(NULL)
})
if(!is.null(all.reviews.link)) {
all.reviews.link$clickElement()
#Page takes a while to to load
Sys.sleep(2)
#Load max 100 reviews
tryCatch({
for(i in 1:19) {
load.more.button <- tryCatch({
browser$findElement(using = 'class', "zs-load-more-count")
}, error = function(NoSuchElementException) {
message("All reviews loaded, continue !")
break()
})
if(!is.null(load.more.button)) {
load.more.button$clickElement()
Sys.sleep(6)
}
}
}, error = function(NoSuchElementException) {
message("All reviews loaded or reviews not present, continue !")
})
page_source <- browser$getPageSource() # read in page contents
html.page <- read_html(page_source[[1]])
browser$close()
# stop the selenium server
driver[["server"]]$stop()
return(html.page)
}
}
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
for(row in 595:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
if(!is.null(restaurant.page)) {
restaurant.name <- restaurant.list[row, "restaurant_name"]
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
print(paste("No of reviews read :",nrow(reviews.df)))
#Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
else {
# if no reviews are available add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count", "Followers Count", "Photos Count")
current.chunk <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(current.chunk) <- headers
reviews.df <- rbind(reviews.df, current.chunk)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
}
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
for(row in 595:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
if(!is.null(restaurant.page)) {
restaurant.name <- restaurant.list[row, "restaurant_name"]
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
print(paste("No of reviews read :",nrow(reviews.df)))
#Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
else {
# if no reviews are available add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count", "Followers Count", "Photos Count")
current.chunk <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(current.chunk) <- headers
reviews.df <- rbind(reviews.df, current.chunk)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
}
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
first.run <- FALSE
if(first.run) {
restaurant.reviews.df <- data.frame(matrix(ncol = 13, nrow = 0))
headers <- c("Name", "Cuisines", "Cost", "Timings", "Collections", "url",
"UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
colnames(restaurant.reviews.df) <- headers
write.csv(restaurant.reviews.df, "restaurant_reviews.csv", row.names=FALSE)   #Write to empty csv file later append reviews
}
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
for(row in 595:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
if(!is.null(restaurant.page)) {
restaurant.name <- restaurant.list[row, "restaurant_name"]
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
print(paste("No of reviews read :",nrow(reviews.df)))
#Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
else {
# if no reviews are available add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count", "Followers Count", "Photos Count")
current.chunk <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(current.chunk) <- headers
reviews.df <- rbind(reviews.df, current.chunk)
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
}
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
}
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
#iterate through each restaurant in restaurant list
for(row in 595:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
restaurant.name <- restaurant.list[row, "restaurant_name"]
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
# If reviews tab is present, proceed to fetch else mark reviews as NA
if(!is.null(restaurant.page)) {
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
# Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
print(paste("No of reviews read :",nrow(reviews.df)))
}
else {
# if no reviews are available under reviews tab, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
}
else {
# if reviews tab it not available at all, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
temp = list.files(path="reviews/")
count = 0
for (i in 1:length(temp)) {
rows <- as.numeric(nrow(read.csv(paste0("reviews/",temp[i]))))
count <- count + rows
}
print(paste0("No of reviews :", row))
#Chai Raja
temp = list.files(path="reviews/")
count = 0
for (i in 1:length(temp)) {
rows <- as.numeric(nrow(read.csv(paste0("reviews/",temp[i]))))
count <- count + rows
}
print(paste0("No of restaurants with atleast 1 review :", length(temp)))
print(paste0("Total no of reviews fetched :", count))
#Chai Raja
restaurant_list <- read.csv("restaurant_list.csv")
restaurant.list <- read.csv("restaurant_list.csv")
print(nrow(restaurant.list$restaurant_name))
print(nrow(restaurant.list))
temp = list.files(path="reviews/")
count = 0
for (i in 1:length(temp)) {
rows <- as.numeric(nrow(read.csv(paste0("reviews/",temp[i]))))
count <- count + rows
}
print(paste0("No of restaurants with atleast 1 review :", length(temp)))
print(paste0("Total no of reviews fetched :", count))
restaurant.list <- read.csv("restaurant_list.csv")
print(nrow(restaurant.list))
#Chai Raja
restaurant.reviews <- read.csv("restaurant_reviews.csv")
print(length(unique(restaurant.reviews$Name)))
temp = list.files(path="reviews/")
count = 0
for (i in 1:length(temp)) {
rows <- as.numeric(nrow(read.csv(paste0("reviews/",temp[i]))))
count <- count + rows
}
print(paste0("No of restaurants with atleast 1 review :", length(temp)))
print(paste0("Total no of reviews fetched :", count))
restaurant.list <- read.csv("restaurant_list.csv")
print(nrow(restaurant.list))
restaurant.reviews <- read.csv("restaurant_reviews.csv")
print(length(unique(restaurant.reviews$Name)))
#length(unique(df[["some_col"]]))
#Chai Raja
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
#iterate through each restaurant in restaurant list
for(row in 448:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
restaurant.name <- restaurant.list[row, "restaurant_name"]
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
# If reviews tab is present, proceed to fetch else mark reviews as NA
if(!is.null(restaurant.page)) {
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
# Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
print(paste("No of reviews read :",nrow(reviews.df)))
}
else {
# if no reviews are available under reviews tab, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
}
else {
# if reviews tab it not available at all, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
dir.create(file.path("", "reviews"))
dir.create(file.path(".", "reviews"))
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
#iterate through each restaurant in restaurant list
for(row in 448:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
restaurant.name <- restaurant.list[row, "restaurant_name"]
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
# If reviews tab is present, proceed to fetch else mark reviews as NA
if(!is.null(restaurant.page)) {
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
# Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
print(paste("No of reviews read :",nrow(reviews.df)))
}
else {
# if no reviews are available under reviews tab, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
}
else {
# if reviews tab it not available at all, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
system.time({
restaurant.list <- read.csv("restaurant_list.csv", check.names=FALSE)
#iterate through each restaurant in restaurant list
for(row in 558:nrow(restaurant.list)) {  #336
tryCatch ({
start.time <- lubridate::now()
restaurant.name <- restaurant.list[row, "restaurant_name"]
cuisines <- restaurant.list[row, "cuisines"]
cost <- as.numeric(restaurant.list[row, "cost"])
timings <- restaurant.list[row, "timings"]
collections <- restaurant.list[row, "collections"]
url <- restaurant.list[row, "url"]
url <- paste0(url,"/reviews")
print(paste("Fetching reviews from :",url))
restaurant.page <- LoadAllRestaurantReviews(url)
# If reviews tab is present, proceed to fetch else mark reviews as NA
if(!is.null(restaurant.page)) {
reviews.df <- ReadReviewsForResturant(restaurant.page)
if(nrow(reviews.df) > 0) {
# Write reviews of each restaurant to separate file as well
write.csv(reviews.df, paste0("reviews/", restaurant.name, ".csv"), row.names=FALSE)
print(paste("No of reviews read :",nrow(reviews.df)))
}
else {
# if no reviews are available under reviews tab, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
}
else {
# if reviews tab it not available at all, add row with NA values
headers <- c("UserId", "Review Text", "Rating", "Time", "Reviews Count",
"Followers Count", "Photos Count")
reviews.df <- data.frame(NA, NA, NA, NA, NA, NA, NA)
names(reviews.df) <- headers
}
reviews.df <- cbind(Name = restaurant.name,
Cuisines = cuisines,
Cost = cost,
Timings = timings,
Collections = collections,
url = url,
reviews.df)
restaurant.reviews.df <- read.csv("restaurant_reviews.csv", check.names=FALSE)
restaurant.reviews.df <- rbind(restaurant.reviews.df, reviews.df)
write.csv(restaurant.reviews.df, "restaurant_reviews.csv",
fileEncoding = "UTF-8", row.names=FALSE)
print(paste("Completed fetching reviews for :",
restaurant.name, "in",
round(as.numeric(lubridate::now() - start.time)), "seconds"))
Sys.sleep(10)
}, error = function(e) {
print(e)
Sys.sleep(300)
message("Error in processing, continue to next restaurant !")
})
}
})
